import requests
import zipfile
import io
import os
import shutil
from datetime import datetime

# URL –ø–æ—Å–ª–µ–¥–Ω–µ–π –≤–µ—Ä—Å–∏–∏ –∞—Ä—Ö–∏–≤–∞
ZIP_URL = "https://github.com/runetfreedom/russia-v2ray-rules-dat/releases/latest/download/sing-box.zip"

# –ü—É—Ç–∏ –∫ –Ω—É–∂–Ω—ã–º —Ñ–∞–π–ª–∞–º –≤–Ω—É—Ç—Ä–∏ –∞—Ä—Ö–∏–≤–∞ –∏ –∏—Ö –≤—ã—Ö–æ–¥–Ω—ã–µ –∏–º–µ–Ω–∞
TARGET_FILES = {
    "rule-set-geoip/geoip-ru-blocked.srs": "geoip-ru-blocked.srs",
    "rule-set-geoip/geoip-ru-blocked-community.srs": "geoip-ru-blocked-community.srs", 
    "rule-set-geosite/geosite-ru-blocked-all.srs": "geosite-ru-blocked-all.srs",
    "rule-set-geosite/geosite-category-speedtest.srs": "geosite-speedtest.srs",
    "rule-set-geosite/geosite-twitch.srs": "geosite-twitch.srs",
    "rule-set-geosite/geosite-discord.srs": "geosite-discord.srs"
}

def create_old_directory():
    """–°–æ–∑–¥–∞–µ—Ç –ø–∞–ø–∫—É old –µ—Å–ª–∏ –µ–µ –Ω–µ—Ç"""
    old_dir = "old"
    if not os.path.exists(old_dir):
        os.makedirs(old_dir)
        print(f"üìÅ –°–æ–∑–¥–∞–Ω–∞ –ø–∞–ø–∫–∞: {old_dir}")
    return old_dir

def move_old_files(old_dir):
    """–ü–µ—Ä–µ–º–µ—â–∞–µ—Ç —Å—Ç–∞—Ä—ã–µ —Ñ–∞–π–ª—ã –≤ –ø–∞–ø–∫—É old"""
    moved_files = []
    for output_file in TARGET_FILES.values():
        if os.path.exists(output_file):
            # –°–æ–∑–¥–∞–µ–º —É–Ω–∏–∫–∞–ª—å–Ω–æ–µ –∏–º—è —Å timestamp
            timestamp = datetime.now().strftime("%Y%m%d_%H%M%S")
            old_filename = f"{output_file}.{timestamp}.old"
            old_path = os.path.join(old_dir, old_filename)
            
            # –ü–µ—Ä–µ–º–µ—â–∞–µ–º —Ñ–∞–π–ª
            shutil.move(output_file, old_path)
            moved_files.append((output_file, old_filename))
            print(f"üì¶ –ü–µ—Ä–µ–º–µ—â–µ–Ω: {output_file} -> old/{old_filename}")
    
    return moved_files

def update_files():
    print(f"[{datetime.now().strftime('%Y-%m-%d %H:%M:%S')}] –ù–∞—á–∞–ª–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Ñ–∞–π–ª–æ–≤...")
    print(f"–†–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π: https://github.com/mihail165198/rusrs")
    print("=" * 60)
    
    # –°–æ–∑–¥–∞–µ–º –ø–∞–ø–∫—É –¥–ª—è —Å—Ç–∞—Ä—ã—Ö —Ñ–∞–π–ª–æ–≤
    old_dir = create_old_directory()
    
    # –ü–µ—Ä–µ–º–µ—â–∞–µ–º —Å—Ç–∞—Ä—ã–µ —Ñ–∞–π–ª—ã
    moved_files = move_old_files(old_dir)
    if moved_files:
        print(f"üì¶ –ü–µ—Ä–µ–º–µ—â–µ–Ω–æ —Ñ–∞–π–ª–æ–≤: {len(moved_files)}")
    else:
        print("üì¶ –°—Ç–∞—Ä—ã–µ —Ñ–∞–π–ª—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã")
    
    try:
        # –°–∫–∞—á–∞—Ç—å –∞—Ä—Ö–∏–≤
        print("\nüì¶ –°–∫–∞—á–∏–≤–∞–Ω–∏–µ –∞—Ä—Ö–∏–≤–∞...")
        response = requests.get(ZIP_URL, timeout=30)
        response.raise_for_status()
        print("‚úÖ –ê—Ä—Ö–∏–≤ —É—Å–ø–µ—à–Ω–æ —Å–∫–∞—á–∞–Ω")

        # –ü–æ–ª—É—á–∏—Ç—å —Å–ø–∏—Å–æ–∫ —Ñ–∞–π–ª–æ–≤ –≤ –∞—Ä—Ö–∏–≤–µ
        with zipfile.ZipFile(io.BytesIO(response.content)) as zip_ref:
            archive_files = zip_ref.namelist()
            print(f"üìÅ –§–∞–π–ª–æ–≤ –≤ –∞—Ä—Ö–∏–≤–µ: {len(archive_files)}")
            
            success_count = 0
            total_size = 0
            failed_files = []
            
            # –ò–∑–≤–ª–µ—á—å –∫–∞–∂–¥—ã–π —Ü–µ–ª–µ–≤–æ–π —Ñ–∞–π–ª
            for target_path, output_file in TARGET_FILES.items():
                print(f"\nüîç –û–±—Ä–∞–±–æ—Ç–∫–∞: {target_path} -> {output_file}")
                
                # –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –Ω–∞–ª–∏—á–∏–µ —Ñ–∞–π–ª–∞
                if target_path not in archive_files:
                    # –ü–æ–∏—Å–∫ –ø–æ—Ö–æ–∂–∏—Ö —Ñ–∞–π–ª–æ–≤
                    filename = target_path.split('/')[-1]
                    similar_files = [f for f in archive_files if filename in f]
                    print(f"‚ùå –§–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –∞—Ä—Ö–∏–≤–µ!")
                    if similar_files:
                        print(f"   –ü–æ—Ö–æ–∂–∏–µ —Ñ–∞–π–ª—ã: {similar_files}")
                    failed_files.append(target_path)
                    continue
                
                # –ò–∑–≤–ª–µ—á—å —Ñ–∞–π–ª
                try:
                    with zip_ref.open(target_path) as source_file:
                        content = source_file.read()
                    
                    # –°–æ—Ö—Ä–∞–Ω–∏—Ç—å —Ñ–∞–π–ª
                    with open(output_file, "wb") as f:
                        f.write(content)
                    
                    file_size_kb = len(content) / 1024
                    total_size += file_size_kb
                    print(f"‚úÖ –£—Å–ø–µ—à–Ω–æ —Å–æ—Ö—Ä–∞–Ω–µ–Ω! –†–∞–∑–º–µ—Ä: {file_size_kb:.2f} KB")
                    success_count += 1
                    
                except Exception as e:
                    print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ: {e}")
                    failed_files.append(target_path)
            
            # –í—ã–≤–µ—Å—Ç–∏ –∏—Ç–æ–≥–∏
            print(f"\n{'='*60}")
            print(f"üìä –ò–¢–û–ì: –£—Å–ø–µ—à–Ω–æ –æ–±—Ä–∞–±–æ—Ç–∞–Ω–æ {success_count} –∏–∑ {len(TARGET_FILES)} —Ñ–∞–π–ª–æ–≤")
            print(f"üíæ –û–±—â–∏–π —Ä–∞–∑–º–µ—Ä: {total_size:.2f} KB")
            
            if failed_files:
                print(f"\n‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –æ–±—Ä–∞–±–æ—Ç–∞—Ç—å —Ñ–∞–π–ª—ã:")
                for failed_file in failed_files:
                    print(f"   - {failed_file}")
            
            if success_count > 0:
                print("\nüìã –ù–æ–≤—ã–µ —Ñ–∞–π–ª—ã:")
                for output_file in TARGET_FILES.values():
                    if os.path.exists(output_file):
                        file_size = os.path.getsize(output_file) / 1024
                        print(f"   - {output_file} ({file_size:.2f} KB)")
            
            # –°—Å—ã–ª–∫–∏ –¥–ª—è —Å–∫–∞—á–∏–≤–∞–Ω–∏—è
            print(f"\nüåê –ü—Ä—è–º—ã–µ —Å—Å—ã–ª–∫–∏ –¥–ª—è —Å–∫–∞—á–∏–≤–∞–Ω–∏—è:")
            for output_file in TARGET_FILES.values():
                if os.path.exists(output_file):
                    download_url = f"https://raw.githubusercontent.com/mihail165198/rusrs/main/{output_file}"
                    print(f"   - {download_url}")
            
            return success_count > 0

    except requests.exceptions.RequestException as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–∫–∞—á–∏–≤–∞–Ω–∏–∏ –∞—Ä—Ö–∏–≤–∞: {e}")
    except zipfile.BadZipFile:
        print("‚ùå –û—à–∏–±–∫–∞: –∞—Ä—Ö–∏–≤ –ø–æ–≤—Ä–µ–∂–¥–µ–Ω –∏–ª–∏ –Ω–µ —è–≤–ª—è–µ—Ç—Å—è ZIP-—Ñ–∞–π–ª–æ–º")
    except Exception as e:
        print(f"‚ùå –ù–µ–æ–∂–∏–¥–∞–Ω–Ω–∞—è –æ—à–∏–±–∫–∞: {e}")
    
    return False

if __name__ == "__main__":
    success = update_files()
    exit(0 if success else 1)
